name: Test on GPU

on:
  push:
    branches: [main, released]
  pull_request:
    branches: [main, released]

env:
  PYTHON_VERSION: "3.12"
  UV_VERSION: "0.5.10"

jobs:
  test:
    runs-on:
      - codebuild-pamiq-core-linux-gpu-runner-${{ github.run_id }}-${{ github.run_attempt }}
    strategy:
      fail-fast: false

    timeout-minutes: 20

    steps:
      - name: Check NVIDIA Driver Version File
        run: |
          NVIDIA_VERSION_FILE="/proc/driver/nvidia/version"
          if [ -f "$NVIDIA_VERSION_FILE" ]; then
            echo "NVIDIA driver version file found:"
            cat "$NVIDIA_VERSION_FILE"
          else
            echo "::error::NVIDIA driver version file not found at $NVIDIA_VERSION_FILE"
            echo "This self-hosted runner does not appear to have NVIDIA GPU drivers installed."
            exit 1
          fi

      - uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v4
        with:
          version: ${{ env.UV_VERSION }}
          python-version: ${{ env.PYTHON_VERSION }}
          enable-cache: true

      - name: Install dependencies
        run: uv sync --extra torch

      - name: Check PyTorch GPU Detection
        run: |
          CUDA_AVAILABLE=$(uv run python -c "import torch; print(torch.cuda.is_available())")
          echo "PyTorch CUDA detection result: $CUDA_AVAILABLE"
          if [ "$CUDA_AVAILABLE" != "True" ]; then
            echo "::error::PyTorch cannot detect CUDA/GPU capability!"
            echo "Driver may be installed but CUDA is not properly configured for PyTorch."
            exit 1
          fi
          uv run python -c "import torch; print(f'Found {torch.cuda.device_count()} GPU(s)'); [print(f'GPU {i}: {torch.cuda.get_device_name(i)}') for i in range(torch.cuda.device_count())]"

      - name: Check installed packages
        run: |
          echo "Python version:"
          uv run python -V
          echo "All installed packages:"
          uv pip list

      - name: Run pytest
        run: |
          uv run pytest -v --log-level=INFO tests/pamiq_core/torch/
